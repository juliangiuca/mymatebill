grammar Oweing
  rule sentence
    action space amount joiner? description?  {
      def content
        {:creditor    => action.creditor.content,
         :debitor     => action.debitor.content,
         :amount      => amount.content,
         :description => (elements.last.respond_to?(:name) && elements.last.name == "description" ? elements.last.content : nil)}
      end
    }
  end

  rule debitor
    ([A-Za-z0-9]+ / "me" / "I") {
    def content
      text_value
    end
    }
  end

  rule creditor
    ([A-Za-z0-9]+ / "me" / "I") {
    def content
      text_value
    end
    }
  end

  rule action
    (creditor gives_to debitor /
    debitor takes_from creditor) {
      def content
        elements.map{|e| e.content if e.respond_to?(:content)}
      end
    }
  end

  rule gives_to
    space ("gave" / "lent") space
  end

  rule takes_from
    space ("owes" / "owe") space
  end

  rule space
    [ \t\n\r] {
    }
  end

  rule amount
  [\$0-9\.]+ {
    def content
      text_value
    end
  }
  end

  rule joiner
  space "for" space {
    def content
      [:joiner, text_value.strip]
    end
  }
  end

  rule description
  [A-Za-z0-9\s]+ {
    def content
      text_value
    end
    def name
    return "description"
    end
  }
  end
end
